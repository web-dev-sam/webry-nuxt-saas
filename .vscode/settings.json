{
  // Disable the default formatter, use eslint instead
  "editor.formatOnSave": false,
  "editor.detectIndentation": false,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },

  // Silent the stylistic rules in you IDE, but still auto fix them
  "eslint.rules.customizations": [
    { "rule": "style/*", "severity": "off", "fixable": true },
    { "rule": "format/*", "severity": "off", "fixable": true },
    { "rule": "*-indent", "severity": "off", "fixable": true },
    { "rule": "*-spacing", "severity": "off", "fixable": true },
    { "rule": "*-spaces", "severity": "off", "fixable": true },
    { "rule": "*-order", "severity": "off", "fixable": true },
    { "rule": "*-dangle", "severity": "off", "fixable": true },
    { "rule": "*-newline", "severity": "off", "fixable": true },
    { "rule": "*quotes", "severity": "off", "fixable": true },
    { "rule": "*semi", "severity": "off", "fixable": true }
  ],

  // Enable eslint for all supported languages
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "json5",
    "jsonc",
    "yaml",
    "toml",
    "xml",
    "gql",
    "graphql",
    "astro",
    "css",
    "less",
    "scss",
    "pcss",
    "postcss"
  ],
  "typescript.tsdk": "node_modules/typescript/lib",

  // Nuxtr settings
  "nuxtr.defaultPackageManager": "pnpm",
  "nuxtr.openItemsAfterCreation": true,
  "nuxtr.vueFiles.firstTag": "script",
  "nuxtr.vueFiles.style.defaultLanguage": "postcss",
  "nuxtr.vueFiles.style.alwaysScoped": true,
  "nuxtr.vueFiles.style.addStyleTag": false,

  // Disable file nesting if annoying
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "nuxt.config.*": "tailwind.config.*, tsconfig.*, eslint*, .prettier*, .gitignore, biome*, components.json, .env*, drizzle.*",
    "package.json": "bun.lockb, package-lock.json, README*, pnpm-lock.yaml, yarn.lock"
  },
  "editor.gotoLocation.multipleDefinitions": "goto"
}
